version: '2'

services:

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: "/tmp/logs"

  kafka-cluster:
    image: wurstmeister/kafka:2.12-2.2.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_CREATE_TOPICS: "live-topic:1:1,enrichment-topic:1:1,scoring-topic:1:1,matching-routes-topic:1:1,route-analytics-topic:1:1"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-cluster:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      LOG_DIR: "/tmp/logs"

  kafdrop:
    image: obsidiandynamics/kafdrop
    depends_on:
      - kafka-cluster
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka-cluster:9093"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
  
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.0.0
  #   environment:
  #     - discovery.type=single-node
  #   ports:
  #     - 9200:9200
  #     - 9201:9201

  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.0.0
  #   ports:
  #     - 5601:5601

  live-trip-service:
    image: r00ta/live-trip-service-jvm:latest 
    depends_on:
      - kafka-cluster
    ports:
      - 1337:1337

  scoring-enrichment-service:
    image: r00ta/scoring-service-jvm:latest
    depends_on:
      - kafka-cluster

    ports:
      - 1338:1338

  user-service:
    image: r00ta/user-service-jvm:latest 
    depends_on:
      - kafka-cluster
    ports:
      - 1339:1339

volumes:
  mongodb_data_container:
