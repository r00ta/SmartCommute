# message from the live/trip service
mp.messaging.incoming.enrichment-topic.connector=smallrye-kafka
mp.messaging.incoming.enrichment-topic.topic=enrichment-topic
mp.messaging.incoming.enrichment-topic.value.deserializer=com.r00ta.telematics.platform.enrich.messaging.incoming.TripCloudEventDeserializer
mp.messaging.incoming.enrichment-topic.bootstrap.servers=${BOOTSTRAP_SERVERS:localhost}
# message for the user service
mp.messaging.outgoing.scoring-topic.connector=smallrye-kafka
mp.messaging.outgoing.scoring-topic.topic=scoring-topic
mp.messaging.outgoing.scoring-topic.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.scoring-topic.bootstrap.servers=${BOOTSTRAP_SERVERS:localhost}
# message for the analytics service
mp.messaging.outgoing.route-analytics-topic.connector=smallrye-kafka
mp.messaging.outgoing.route-analytics-topic.topic=route-analytics-topic
mp.messaging.outgoing.route-analytics-topic.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.route-analytics-topic.bootstrap.servers=${BOOTSTRAP_SERVERS:localhost}

quarkus.http.port=1338
quarkus.http.test-port=8081
quarkus.http.cors=true
quarkus.swagger-ui.always-include=true
mp.jwt.verify.publickey.location=META-INF/resources/publicKey.pem
mp.jwt.verify.issuer=https://quarkus.io/using-jwt-rbac
quarkus.smallrye-jwt.enabled=true

quarkus.mongodb.connection-string = mongodb://user:12345@mongo:27017/myMongoDb
quarkus.mongodb.database = myMongoDb

quarkus.kafka.bootstrap-servers = ${BOOTSTRAP_SERVERS:localhost}

here.apiKey = ${HERE_API_KEY:redacted}
here.appKey = ${HERE_APP_KEY:redacted}